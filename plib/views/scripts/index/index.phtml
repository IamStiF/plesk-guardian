<?php
/**
 * Plesk Guardian — Consola Centralizada de Logs (versión dinámica con filtros y diseño mejorado)
 * @package Plesk_Guardian
 * @license AGPL-3.0
 */
?>

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700&display=swap" rel="stylesheet">

<style>
  body {
    font-family: 'Inter', sans-serif;
    background-color: #f4f6f8;
    margin: 0;
    padding: 20px;
  }

  .container {
    max-width: 1400px;
    margin: 0 auto;
  }

  .filters {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px 8px 0 0;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  .filters h2 {
    margin: 0 0 15px 0;
    color: #2c3e50;
  }

  .filters label {
    display: block;
    margin-bottom: 5px;
    color: #555;
    font-weight: bold;
  }

  .filters select,
  .filters input {
    width: 100%;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box;
  }

  .filters button {
    padding: 10px 20px;
    background-color: #e74c3c;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  th {
    text-align: left;
    padding: 12px;
    background-color: #2c3e50;
    color: #fff;
  }

  td {
    padding: 10px;
    border: 1px solid #ddd;
  }

  tr:nth-child(even) {
    background-color: #f9f9f9;
  }

  .level {
    font-weight: bold;
    text-align: center;
    padding: 4px 6px;
    border-radius: 4px;
    color: #fff;
  }

  .level.INFO { background-color: #28a745; }
  .level.WARNING { background-color: #ffc107; color: #856404; }
  .level.ERROR { background-color: #dc3545; }
  .no-logs {
    background-color: #fff;
    padding: 20px;
    border-radius: 0 0 8px 8px;
    text-align: center;
    color: #555;
  }
</style>

<div class="container">
  <!-- 🔍 Filtros -->
  <div class="filters">
    <h2>Filtros de Logs</h2>
    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;">
      <div>
        <label>Filtrar por:</label>
        <select id="filterColumn">
          <option value="domain">Dominio</option>
          <option value="module">Módulo</option>
          <option value="pidtid">PID:TID</option>
          <option value="client">Cliente</option>
          <option value="code">Código</option>
          <option value="message">Mensaje</option>
        </select>
      </div>
      <div>
        <label>Valor:</label>
        <input type="text" id="filterValue" placeholder="Ingrese valor a buscar">
      </div>
      <div>
        <label>Nivel:</label>
        <select id="filterNivel">
          <option value="">Todos</option>
          <option value="INFO">INFO</option>
          <option value="WARN">WARNING</option>
          <option value="ERROR">ERROR</option>
        </select>
      </div>
      <div>
        <label>Fecha Desde:</label>
        <input type="datetime-local" id="filterFechaDesde">
      </div>
      <div>
        <label>Fecha Hasta:</label>
        <input type="datetime-local" id="filterFechaHasta">
      </div>
    </div>
    <div style="margin-top: 15px;">
      <button onclick="clearFilters()">Limpiar Filtros</button>
    </div>
  </div>

  <!-- 🧾 Tabla de Logs -->
  <div style="overflow-x:auto;">
    <table id="logTable">
      <thead>
        <tr>
          <th>Fecha/Hora</th>
          <th>Dominio</th>
          <th>Módulo</th>
          <th>Nivel</th>
          <th>PID:TID</th>
          <th>Cliente</th>
          <th>Código</th>
          <th>Mensaje</th>
        </tr>
      </thead>
      <tbody id="logTableBody">
        <?php if (!empty($this->entries)): ?>
          <?php foreach ($this->entries as $r): ?>
            <?php
              $level = strtoupper($r['level'] ?? 'INFO');
              $levelClass = in_array($level, ['INFO', 'WARNING', 'ERROR']) ? $level : 'INFO';
              $pidtid = trim(($r['pid'] ?? '') . ':' . ($r['tid'] ?? ''), ':');
            ?>
            <tr>
              <td><?= htmlspecialchars($r['timestamp'] ?? '') ?></td>
              <td><?= htmlspecialchars($r['domain'] ?? '') ?></td>
              <td><?= htmlspecialchars($r['module'] ?? '') ?></td>
              <td><span class="level <?= $levelClass ?>"><?= htmlspecialchars($level) ?></span></td>
              <td><?= htmlspecialchars($pidtid) ?></td>
              <td><?= htmlspecialchars($r['client'] ?? '') ?></td>
              <td><?= htmlspecialchars($r['code'] ?? '') ?></td>
              <td><?= htmlspecialchars($r['message'] ?? '') ?></td>
            </tr>
          <?php endforeach; ?>
        <?php else: ?>
          <tr><td colspan="8" class="no-logs">No se encontraron logs recientes.</td></tr>
        <?php endif; ?>
      </tbody>
    </table>
  </div>
</div>

<script>
function parseDateTime(dateTimeStr) {
  const parts = dateTimeStr.split(' ');
  if (parts.length < 2) return null;
  const dateParts = parts[0].split('-');
  const timeParts = parts[1].split(':');
  return new Date(dateParts[0], dateParts[1] - 1, dateParts[2], timeParts[0], timeParts[1] || 0, timeParts[2] || 0);
}

function filterTable() {
  const filterColumn = document.getElementById('filterColumn').value;
  const filterValue = document.getElementById('filterValue').value.toLowerCase();
  const nivel = document.getElementById('filterNivel').value.toUpperCase();
  const fechaDesde = document.getElementById('filterFechaDesde').value;
  const fechaHasta = document.getElementById('filterFechaHasta').value;

  const rows = document.querySelectorAll('#logTableBody tr');

  rows.forEach(row => {
    const cells = row.getElementsByTagName('td');
    if (cells.length < 8) return;

    const columnMap = {
      'domain': 1,
      'module': 2,
      'pidtid': 4,
      'client': 5,
      'code': 6,
      'message': 7
    };

    const rowFecha = parseDateTime(cells[0].textContent.trim());
    const rowNivel = cells[3].textContent.toUpperCase().trim();
    const rowColumnValue = cells[columnMap[filterColumn]].textContent.toLowerCase();

    const matchesColumn = filterValue === '' || rowColumnValue.includes(filterValue);
    const matchesNivel = nivel === '' || rowNivel === nivel;
    let matchesFecha = true;

    if (fechaDesde || fechaHasta) {
      const desde = fechaDesde ? new Date(fechaDesde) : null;
      const hasta = fechaHasta ? new Date(fechaHasta) : null;

      if (rowFecha) {
        if (desde && hasta) matchesFecha = rowFecha >= desde && rowFecha <= hasta;
        else if (desde) matchesFecha = rowFecha >= desde;
        else if (hasta) matchesFecha = rowFecha <= hasta;
      }
    }

    row.style.display = (matchesColumn && matchesNivel && matchesFecha) ? '' : 'none';
  });
}

function clearFilters() {
  document.getElementById('filterColumn').value = 'domain';
  document.getElementById('filterValue').value = '';
  document.getElementById('filterNivel').value = '';
  document.getElementById('filterFechaDesde').value = '';
  document.getElementById('filterFechaHasta').value = '';
  filterTable();
}

document.querySelectorAll('#filterColumn, #filterValue, #filterNivel, #filterFechaDesde, #filterFechaHasta')
  .forEach(el => el.addEventListener('input', filterTable));
</script>
